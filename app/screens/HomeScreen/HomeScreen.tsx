/* eslint-disable react-native/no-inline-styles */
/* eslint-disable react/no-unstable-nested-components */
import React from 'react';
import {
    FlatList,
    Image,
    Pressable,
    SafeAreaView,
    StyleSheet,
    Text,
    View,
} from 'react-native';
import { colors } from '../../utils/theme';
import { GoogleSignin } from '@react-native-google-signin/google-signin';
const fontSize = {
    big: 24,
    primary: 16,
    small: 14,
};

const history1 = [
    'reactnative',
    'reactnative v0.76',
    'reactnative v0.77',
    'reactnative v0.78',
    'reactnative',
];

const history2 = ['React', 'v0.76', 'mern v0.77', 'reactnative v0.78', 'reactnative'];

const cards = [
    {
        id: 1,
        title: 'React Native',
        generated: 'Generated by docs',
        prompt: 'Give the React Native basics',
        color: "#3FCB80"
    },
    {
        id: 2,
        title: 'React',
        generated: 'Generated by docs',
        prompt: 'Give the React basics',
        color: '#EFB4D4'
    },
    {
        id: 3,
        title: 'MERN',
        generated: 'Generated by docs',
        prompt: 'Give the MERN basics',
        color: "#763D78"
    },
    {
        id: 4,
        title: 'React Native',
        generated: 'Generated by docs',
        prompt: 'Give the React Native basics',
        color: "#6ECBFF"
    },
];

const HomeScreen = ({ navigation }) => {
    const [user, setUser] = React.useState(null);


    // get user data 
    React.useEffect(() => {
        const getUser = async () => {
            try {
                const userData = await GoogleSignin.signInSilently();
                setUser(userData);
                console.log(user)
            } catch (error) {
                if (error.code === statusCodes.SIGN_IN_REQUIRED) {
                    console.log('User is not signed in');
                }
            }
        }


        getUser();
    }, [])

    // Handle Chat button press
    const handleNewChat = () => {
        console.log('New chat pressed');
        navigation.navigate('chat');
    };

    // Render individual history item
    const RenderItem = ({ item }) => (
        <View style={styles.item}>
            <Text style={styles.itemText}>{item}</Text>
        </View>
    );

    // Render individual card item
    const RenderCard = ({ item }) => (
        <View style={[styles.card, { backgroundColor: item.color }]}>
            {/* Title */}
            <Text style={styles.cardTitle}>{item.title}</Text>
            {/* Subtitle */}
            <Text style={styles.cardSubtitle}>{item.generated}</Text>
            {/* Link */}
            <Pressable style={styles.cardLink}>
                <Text style={styles.cardLinkText}>Use this prompt</Text>
            </Pressable>
        </View>
    );

    return (
        <SafeAreaView style={styles.container}>
            <View style={styles.innerContainer}>
                {/* Profile */}
                <Pressable onPress={() => {
                    navigation.navigate("profile")
                }} style={{
                    flexDirection: 'row',
                    gap: 10,
                    alignItems: 'center',
                    // justifyContent: "center",
                    display: "flex",
                }}>
                    {user === null ? (
                        <View style={styles.profileContainer}></View>)
                        : (
                            <Image source={{ uri: user?.data?.user?.photo }} style={styles.profileContainer} />)}
                </Pressable>

                {/* Greeting */}
                <View style={styles.greetContainer}>
                    <Text style={styles.greetText}>
                        Explore knowledge {'\n'}
                        with <Text style={styles.highlight}>AI Chat</Text>
                    </Text>
                </View>

                {/* Chat button */}
                <Pressable style={styles.button} onPress={handleNewChat}>
                    <Text style={styles.buttonText}>Chat with AI</Text>
                    <View style={styles.chatButtonIcon}>
                        <Text style={styles.chatButtonIconText}>+</Text>
                    </View>
                </Pressable>

                {/* Chat History */}
                <View>
                    <View style={styles.historyContainer}>
                        <Text style={styles.sectionTitle}>Chat History</Text>
                        <Pressable onPress={() => console.log('View all chat history')}>
                            <Text style={styles.linkText}>See all</Text>
                        </Pressable>
                    </View>

                    <FlatList
                        data={history1}
                        horizontal
                        showsHorizontalScrollIndicator={false}
                        keyExtractor={(item, index) => `history1-${index}`}
                        renderItem={({ item }) => <RenderItem item={item} />}
                    />
                    <FlatList
                        style={styles.historyList}
                        data={history2}
                        horizontal
                        showsHorizontalScrollIndicator={false}
                        keyExtractor={(item, index) => `history2-${index}`}
                        renderItem={({ item }) => <RenderItem item={item} />}
                    />
                </View>

                {/* Trending News */}
                <View style={styles.trendingContainer}>
                    <Text style={styles.sectionTitle}>Trending</Text>

                    {/* Cards */}
                    <FlatList
                        data={cards}
                        horizontal
                        showsHorizontalScrollIndicator={false}
                        keyExtractor={(item) => `card-${item.id}`}
                        renderItem={({ item }) => <RenderCard item={item} />}
                    />
                </View>
            </View>
        </SafeAreaView>
    );
};

export default HomeScreen;

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: 'white',
    },
    innerContainer: {
        paddingHorizontal: 16,
        paddingVertical: 20,
    },
    profileContainer: {
        height: 50,
        width: 50,
        backgroundColor: colors.yellow,
        borderRadius: 25,
        marginBottom: 16,
        alignSelf: 'flex-start',
    },
    greetContainer: {
        marginTop: 25,
    },
    greetText: {
        fontSize: fontSize.big + 20,
        fontWeight: '300',
        color: colors.black,
        lineHeight: 60,
    },
    highlight: {
        fontWeight: '700',
    },
    button: {
        height: 50,
        backgroundColor: colors.yellow,
        borderRadius: 25,
        justifyContent: 'space-between',
        alignItems: 'center',
        marginVertical: 20,
        paddingHorizontal: 10,
        flexDirection: 'row',
    },
    buttonText: {
        fontSize: fontSize.primary,
        fontWeight: '500',
        color: colors.black,
    },
    chatButtonIcon: {
        height: 40,
        width: 40,
        backgroundColor: 'black',
        borderRadius: 40,
        justifyContent: 'center',
        alignItems: 'center',
    },
    chatButtonIconText: {
        color: 'white',
        textAlign: 'center',
    },
    historyContainer: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginBottom: 20,
    },
    sectionTitle: {
        fontSize: fontSize.big + 5,
        fontWeight: '300',
        color: colors.black,
    },
    linkText: {
        fontSize: fontSize.primary,
        color: 'gray',
    },
    historyList: {
        marginTop: -10,
    },
    trendingContainer: {
        marginBottom: 20,
    },
    card: {
        height: 210,
        width: 160,
        backgroundColor: 'red',
        marginTop: 20,
        borderRadius: 20,
        paddingHorizontal: 10,
        marginRight: 20,
    },
    cardTitle: {
        fontSize: fontSize.big,
        color: 'white',
        fontWeight: 'bold',
        marginBottom: 10,
        marginTop: 20,
    },
    cardSubtitle: {
        fontSize: fontSize.small,
        color: 'white',
        marginBottom: 10,
    },
    cardLink: {
        height: 35,
        backgroundColor: 'white',
        justifyContent: 'center',
        alignItems: 'center',
        borderRadius: 15,
        marginTop: 'auto',
        marginBottom: 10,
    },
    cardLinkText: {
        fontSize: 15,
    },
    item: {
        paddingHorizontal: 20,
        marginBottom: 20,
        height: 30,
        marginRight: 10,
        backgroundColor: 'black',
        justifyContent: 'center',
        alignItems: 'center',
        borderRadius: 20,
    },
    itemText: {
        color: 'white',
    },
});
